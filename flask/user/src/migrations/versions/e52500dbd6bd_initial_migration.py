"""Initial migration.

Revision ID: e52500dbd6bd
Revises: 
Create Date: 2023-05-07 12:59:01.938145

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e52500dbd6bd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('login', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('email', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('social_id', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', 'created_at'),
    sa.UniqueConstraint('id', 'created_at'),
    postgresql_partition_by='RANGE (created_at)'
    )
    op.create_table('session',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('user_created_at', sa.DateTime(), nullable=False),
    sa.Column('user_agent', sa.String(), nullable=False),
    sa.Column('authenticated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id', 'user_created_at'], ['user.id', 'user.created_at'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('social_account',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('social_id', sa.UUID(), nullable=False),
    sa.Column('social_name', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('social_id'),
    sa.UniqueConstraint('social_id', 'social_name', name='social_pk')
    )
    op.create_table('user_role',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('user_created_at', sa.DateTime(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_created_at', 'user_id'], ['user.created_at', 'user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'user_created_at', 'role_id')
    )
    op.create_table('token',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('deactivated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('value')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('token')
    op.drop_table('user_role')
    op.drop_table('social_account')
    op.drop_table('session')
    op.drop_table('user')
    op.drop_table('role')
    # ### end Alembic commands ###
