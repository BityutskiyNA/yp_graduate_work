@startuml
autonumber
footer Page %page% of %lastpage%
participant cron
participant Scheduler
participant worker
participant admin_panel
participant rabit
participant flask_user
participant workerDB
participant fast_api

== Event created mailing list ==
cron->Scheduler:  По расписанию запускает процесс
Scheduler->admin_panel: запрашиваем все не отравленные рассылки по расписанию
admin_panel->Scheduler: получаем список рассылок которые отложены и не отправлены
Scheduler->SchedulerDB: Пишем всех их в базу данных с состоянием созданы
SchedulerDB->Scheduler: Получаем список рассылок
Scheduler->fast_api:  Отправляем события вместе с данными о шаблоне из админ панели
rabit->worker: Забираем сообщение
'worker->admin_panel: по событию запрашиваем тип рассылки шаблон и данные для письма
'admin_panel->worker: по виду события получаем данные для отправки письма и тип рассылки
worker->flask_user: По виду рассылки получаем всех пользователей подписанных на этот вид рассылки
flask_user->worker: Получаем данные по пользователям
worker->worker: На каждого пользователя создается письмо
worker->workerDB: Пишется что письмо создано
workerDB->worker: Данные записаны
worker->mailServer: Отправляем сообщение
mailServer->worker: Информация о отправлении
alt Сообщение отправлено
    worker->workerDB: Пишется что письмо отправлено
    workerDB->worker: Данные записаны
else Сообщение не отправлено
    worker->workerDB: Пишется что письмо отправлено с ошибкой
    workerDB->worker: Данные записаны
    worker->rabit: Отправляем письмо в отдельную очередь для повторной отправки
end
@enduml
